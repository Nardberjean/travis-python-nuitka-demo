language: python
python:
  - 2.7
  - 3.6 # nuitka seems to work only with python2.7 with the used command option (--recurse-all --recurse-stdlib)
  - 3.5
  - 3.4 # May have a Scons issue # http://nuitka.net/doc/user-manual.html
  # - 3.3 # too old for nuitka
  # - 3.2 # too old for nuitka
  - nightly
  - 3.7-dev
  - 3.6-dev
env:
  matrix:
  - CLANG
  - CLANG=--clang
matrix:
  fast_finish: true
  allow_failures:
    - python: nightly
    - python: 3.7-dev
    - python: 3.6-dev

    - python: 3.5
    - python: 3.4
    - python: 3.3
    - python: 3.2

before_install:
- nuitka=nuitka$(python -c "import sys ; v=sys.version_info[0] ; print(v if 2<v else '')")
- gcc --version
- g++ --version
- apt-cache policy python python2.7-minimal python-dev python3 python3-dev
- dpkg --search /usr/bin/python
- dpkg --search /usr/bin/python2.7
- which python2.7

script:
- pytest
- python Hello_world.py
# - ls --color /home/travis/virtualenv/python3.*/bin
-             $nuitka                                $CLANG --run Hello_world.py
# --python2-for-scons=/usr/bin/python2.7
- du -sch Hello_world.bin ; file Hello_world.bin
-             $nuitka --recurse-all                  $CLANG --run Hello_world.py
# --python2-for-scons=/usr/bin/python2.7
- du -sch Hello_world.bin ; file Hello_world.bin
- python -m nuitka    --recurse-all                  $CLANG --run Hello_world.py
# --python2-for-scons=/usr/bin/python2.7
- du -sch Hello_world.bin ; file Hello_world.bin
# - command -v $nuitka
- file $(command -v $nuitka)
- head $(command -v $nuitka)
- ls --color /home/travis/virtualenv/python3.6.3
- ls --color /home/travis/virtualenv/python3.6.3/include
- file       /home/travis/virtualenv/python3.6.3/include/*
- ls --color /home/travis/virtualenv/python3.6.3/lib
- ls --color /home/travis/virtualenv/python3.6.3/lib/python3.6
- ls --color /home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages
# - ls --color /home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/nuitka
- python -m nuitka || true
- $nuitka --recurse-all $CLANG --module --run --include-package=nuitka || true
- $nuitka --recurse-all $CLANG --include-package=nuitka $(command -v $nuitka)
- python -m nuitka --recurse-all $CLANG $(command -v $nuitka)
- python -m nuitka --recurse-all $CLANG --include-package=nuitka $(command -v $nuitka)
# --python2-for-scons=/usr/bin/python2.7
- du -sch $nuitka.bin ; file $nuitka.bin

after_script:
- ./$nuitka.bin --version
- ls --color
- $nuitka --help
- ./$nuitka.bin --help

- ./$nuitka.bin $CLANG --exe Hello_world.py && ./Hello_world.bin
# --python2-for-scons=/usr/bin/python2.7 
- du -sch Hello_world.bin ; file Hello_world.bin
- ./$nuitka.bin --recurse-all $CLANG --include-package=nuitka $(command -v $nuitka)
# --python2-for-scons=/usr/bin/python2.7
- du -sch $nuitka.bin ; file $nuitka.bin

- travis_wait $nuitka --recurse-all --recurse-stdlib --exe Hello_world.py && ./Hello_world.bin ##
# --python2-for-scons=/usr/bin/python2.7 
- du -sch Hello_world.bin ; file Hello_world.bin

# Python3, yes but Python2 compile time dependency
# http://nuitka.net/doc/user-manual.html#use-case-1-program-compilation-with-all-modules-embedded
# Nuitka itself is fully Python3 compatible except for Scons.
# http://scons.org/tag/releases.html

# Moving to other machines
# The created binaries can be made executable independent of the Python installation, with --standalone option.
# http://nuitka.net/doc/user-manual.html#use-case-1-program-compilation-with-all-modules-embedded
